// Generated by ProtoGen, Version=0.9.0.0, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace MDComm {
  
  public static partial class MDComm {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static MDComm() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Messages
  public sealed partial class MessageToSlave : pb::GeneratedMessageLite<MessageToSlave, MessageToSlave.Builder> {
    private static readonly MessageToSlave defaultInstance = new Builder().BuildPartial();
    public static MessageToSlave DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MessageToSlave DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override MessageToSlave ThisMessage {
      get { return this; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_ = 0;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int QueryFieldNumber = 2;
    private bool hasQuery;
    private pb::ByteString query_ = pb::ByteString.Empty;
    public bool HasQuery {
      get { return hasQuery; }
    }
    public pb::ByteString Query {
      get { return query_; }
    }
    
    public const int ResponseLengthFieldNumber = 3;
    private bool hasResponseLength;
    private uint responseLength_ = 0;
    public bool HasResponseLength {
      get { return hasResponseLength; }
    }
    [global::System.CLSCompliant(false)]
    public uint ResponseLength {
      get { return responseLength_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasId) {
        output.WriteInt32(1, Id);
      }
      if (HasQuery) {
        output.WriteBytes(2, Query);
      }
      if (HasResponseLength) {
        output.WriteUInt32(3, ResponseLength);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (HasQuery) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Query);
        }
        if (HasResponseLength) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, ResponseLength);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasId) hash ^= id_.GetHashCode();
      if (hasQuery) hash ^= query_.GetHashCode();
      if (hasResponseLength) hash ^= responseLength_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MessageToSlave other = obj as MessageToSlave;
      if (other == null) return false;
      if (hasId != other.hasId || (hasId && !id_.Equals(other.id_))) return false;
      if (hasQuery != other.hasQuery || (hasQuery && !query_.Equals(other.query_))) return false;
      if (hasResponseLength != other.hasResponseLength || (hasResponseLength && !responseLength_.Equals(other.responseLength_))) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("Id", hasId, id_, writer);
      PrintField("Query", hasQuery, query_, writer);
      PrintField("ResponseLength", hasResponseLength, responseLength_, writer);
    }
    #endregion
    
    public static MessageToSlave ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MessageToSlave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MessageToSlave ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MessageToSlave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MessageToSlave ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MessageToSlave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MessageToSlave ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MessageToSlave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MessageToSlave ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MessageToSlave ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MessageToSlave prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MessageToSlave, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      MessageToSlave result = new MessageToSlave();
      
      protected override MessageToSlave MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new MessageToSlave();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override MessageToSlave DefaultInstanceForType {
        get { return global::MDComm.MessageToSlave.DefaultInstance; }
      }
      
      public override MessageToSlave BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        MessageToSlave returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MessageToSlave) {
          return MergeFrom((MessageToSlave) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MessageToSlave other) {
        if (other == global::MDComm.MessageToSlave.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasQuery) {
          Query = other.Query;
        }
        if (other.HasResponseLength) {
          ResponseLength = other.ResponseLength;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag);
              break;
            }
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 18: {
              Query = input.ReadBytes();
              break;
            }
            case 24: {
              ResponseLength = input.ReadUInt32();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasQuery {
        get { return result.HasQuery; }
      }
      public pb::ByteString Query {
        get { return result.Query; }
        set { SetQuery(value); }
      }
      public Builder SetQuery(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder ClearQuery() {
        result.hasQuery = false;
        result.query_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasResponseLength {
        get { return result.HasResponseLength; }
      }
      [global::System.CLSCompliant(false)]
      public uint ResponseLength {
        get { return result.ResponseLength; }
        set { SetResponseLength(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetResponseLength(uint value) {
        result.hasResponseLength = true;
        result.responseLength_ = value;
        return this;
      }
      public Builder ClearResponseLength() {
        result.hasResponseLength = false;
        result.responseLength_ = 0;
        return this;
      }
    }
    static MessageToSlave() {
      object.ReferenceEquals(global::MDComm.MDComm.Descriptor, null);
    }
  }
  
  public sealed partial class MessageFromSlave : pb::GeneratedMessageLite<MessageFromSlave, MessageFromSlave.Builder> {
    private static readonly MessageFromSlave defaultInstance = new Builder().BuildPartial();
    public static MessageFromSlave DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MessageFromSlave DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override MessageFromSlave ThisMessage {
      get { return this; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_ = 0;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int ResponseFieldNumber = 2;
    private bool hasResponse;
    private pb::ByteString response_ = pb::ByteString.Empty;
    public bool HasResponse {
      get { return hasResponse; }
    }
    public pb::ByteString Response {
      get { return response_; }
    }
    
    public const int MessageFieldNumber = 3;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasId) {
        output.WriteInt32(1, Id);
      }
      if (HasResponse) {
        output.WriteBytes(2, Response);
      }
      if (HasMessage) {
        output.WriteString(3, Message);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (HasResponse) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Response);
        }
        if (HasMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Message);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasId) hash ^= id_.GetHashCode();
      if (hasResponse) hash ^= response_.GetHashCode();
      if (hasMessage) hash ^= message_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MessageFromSlave other = obj as MessageFromSlave;
      if (other == null) return false;
      if (hasId != other.hasId || (hasId && !id_.Equals(other.id_))) return false;
      if (hasResponse != other.hasResponse || (hasResponse && !response_.Equals(other.response_))) return false;
      if (hasMessage != other.hasMessage || (hasMessage && !message_.Equals(other.message_))) return false;
      return true;
    }
    
    public override void PrintTo(global::System.IO.TextWriter writer) {
      PrintField("Id", hasId, id_, writer);
      PrintField("Response", hasResponse, response_, writer);
      PrintField("Message", hasMessage, message_, writer);
    }
    #endregion
    
    public static MessageFromSlave ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MessageFromSlave ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MessageFromSlave ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MessageFromSlave ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MessageFromSlave prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MessageFromSlave, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      MessageFromSlave result = new MessageFromSlave();
      
      protected override MessageFromSlave MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new MessageFromSlave();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override MessageFromSlave DefaultInstanceForType {
        get { return global::MDComm.MessageFromSlave.DefaultInstance; }
      }
      
      public override MessageFromSlave BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        MessageFromSlave returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MessageFromSlave) {
          return MergeFrom((MessageFromSlave) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MessageFromSlave other) {
        if (other == global::MDComm.MessageFromSlave.DefaultInstance) return this;
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasResponse) {
          Response = other.Response;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag);
              break;
            }
            case 8: {
              Id = input.ReadInt32();
              break;
            }
            case 18: {
              Response = input.ReadBytes();
              break;
            }
            case 26: {
              Message = input.ReadString();
              break;
            }
          }
        }
      }
      
      
      public bool HasId {
        get { return result.HasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasResponse {
        get { return result.HasResponse; }
      }
      public pb::ByteString Response {
        get { return result.Response; }
        set { SetResponse(value); }
      }
      public Builder SetResponse(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasResponse = true;
        result.response_ = value;
        return this;
      }
      public Builder ClearResponse() {
        result.hasResponse = false;
        result.response_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasMessage {
        get { return result.HasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static MessageFromSlave() {
      object.ReferenceEquals(global::MDComm.MDComm.Descriptor, null);
    }
  }
  
  #endregion
  
}
